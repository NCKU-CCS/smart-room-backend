"""empty message

Revision ID: cb0eed9e4e3b
Revises: 999d9af15a0b
Create Date: 2021-02-17 13:29:18.859891

"""
from alembic import op
import sqlalchemy as sa


# required if base_model or ModelMixin is used,
# so that utils.base_model's class can be referenced.
import sys
sys.path.insert(0, "./smart_room")
import utils

# revision identifiers, used by Alembic.
revision = 'cb0eed9e4e3b'
down_revision = '999d9af15a0b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensor',
    sa.Column('uuid', utils.base_models.UUID2STR(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created', utils.base_models.UTCDatetime(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('loc', sa.String(), nullable=False),
    sa.Column('device_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('name', 'loc'),
    sa.UniqueConstraint('uuid')
    )
    op.create_unique_constraint(None, 'control_record', ['uuid'])
    op.create_unique_constraint(None, 'device', ['uuid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'device', type_='unique')
    op.drop_constraint(None, 'control_record', type_='unique')
    op.drop_table('sensor')
    # ### end Alembic commands ###
